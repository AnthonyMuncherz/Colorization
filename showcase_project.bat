@echo off
setlocal enabledelayedexpansion
mode con: cols=80 lines=30

:menu_loop
cls
color 0B
REM Bright Aqua on Black

echo.
echo   ================================================================
echo                         IMAGE COLORIZATION PROJECT                
echo                          (DEEP LEARNING SHOWCASE)                 
echo   ================================================================
echo.
echo                     Powered by PyTorch and Flask
echo.
echo   ----------------------------------------------------------------
echo                             MAIN MENU                              
echo   ----------------------------------------------------------------
echo.
echo   [1] Project Information (Model Details)
echo   [2] Explore Project Directories
echo   [3] Verify Model Files and Environment
echo   [4] Run Colorization Demo (Sample Image)
echo   [5] View Technical Stack and Process
echo   [6] Learn About the Research Papers
echo   [0] Exit Showcase
echo.
echo ================================================================
set /p choice="Enter your choice (0-6): "

if "%choice%"=="1" goto project_info
if "%choice%"=="2" goto directory_menu
if "%choice%"=="3" goto model_status
if "%choice%"=="4" goto demo_menu
if "%choice%"=="5" goto technical_details
if "%choice%"=="6" goto research_papers
if "%choice%"=="0" goto end
echo Invalid choice, please try again.
timeout /t 2 > nul
goto menu_loop

:project_info
cls
color 0A
REM Bright Green on Black
echo ================================================================
echo                        PROJECT INFORMATION                       
echo ================================================================
echo.
echo  This project uses deep learning to colorize grayscale images.
echo  It features two distinct neural network models:
echo.
echo  1. ECCV16 Model:
echo     - Based on the "Colorful Image Colorization" paper (ECCV 2016).
echo     - Uses a classification approach to predict color categories.
echo     - Tends to produce natural, sometimes muted, colors.
echo     - Excels with common objects and scenes.
echo.
echo  2. SIGGRAPH17 Model:
echo     - Based on the "Real-Time User-Guided Image Colorization" paper (SIGGRAPH 17).
echo     - Uses a regression approach, often resulting in more vibrant colors.
echo     - Handles complex scenes and textures well.
echo     - Outputs may be more saturated compared to ECCV16.
echo.
echo ================================================================
pause
goto menu_loop

:directory_menu
cls
color 0E
REM Bright Yellow on Black
echo ================================================================
echo                     EXPLORE PROJECT DIRECTORIES                  
echo ================================================================
echo.
echo  Select a directory to open in Windows Explorer:
echo  (Descriptions of key files within each directory are shown below)
echo.
echo  ----------------------------------------------------------------
echo  [1] Input Directory      (colorization\static\uploads)
echo      - Location for placing your grayscale images for the web app.
echo      - Key Files/Contents:
 echo        - ansel_adams3.jpg: Sample image used by the Demo Script.
 echo        - .gitkeep:         Placeholder file for Git.
 echo        - (User images):    Your uploaded JPG/PNG files appear here.
echo.
echo  ----------------------------------------------------------------
echo  [2] Output Directory     (colorization\static\results)
 echo      - Where the colorized images generated by the web app/demo are saved.
 echo      - Key Files/Contents:
 echo        - demo_result_*.png: Output from the Demo Script (Option 4).
 echo        - .gitkeep:          Placeholder file for Git.
 echo        - (Web app results): Colorized images from web uploads appear here.
echo.
echo  ----------------------------------------------------------------
echo  [3] Model Weights        (model)
 echo      - Contains the downloaded pre-trained neural network weight files.
 echo      - Essential for the AI models to function.
 echo      - Key Files:
 echo        - colorization_release_v2-*.pth: Weights for the ECCV16 model.
 echo        - siggraph17-*.pth:            Weights for the SIGGRAPH17 model.
echo.
echo  ----------------------------------------------------------------
echo  [4] Colorizers Scripts (colorization\colorizers)
 echo      - Contains the Python code defining the AI models and related utilities.
 echo      - Key Files:
 echo        - __init__.py:    Makes this a Python package; imports other modules.
 echo        - base_color.py:  Base class with color normalization logic.
 echo        - eccv16.py:      Python code for the ECCV16 model architecture/loading.
 echo        - siggraph17.py:  Python code for the SIGGRAPH17 model architecture/loading.
 echo        - util.py:        Utility functions (image loading/preprocessing).
echo.
echo  ----------------------------------------------------------------
echo  [5] Web Templates      (colorization\templates)
 echo      - Contains the HTML files that define the web application's user interface.
 echo      - Key Files:
 echo        - index.html: The main page structure and content for the web app.
echo.
echo  ----------------------------------------------------------------
echo  [6] Main App Folder    (colorization)
 echo      - Contains the core application scripts and subdirectories.
 echo      - Key Files/Folders:
 echo        - app.py:           The Flask web server script that runs the web app.
 echo        - demo_release.py:  Script to run the command-line colorization demo.
 echo        - test_colorizers.py: Script to verify model loading (used in Menu Option 3).
 echo        - requirements.txt: Lists required Python packages (Flask, PyTorch, etc.).
 echo        - LICENSE:          License file for the original colorization code.
 echo        - colorizers/:      Subfolder containing model scripts (see Option 4).
 echo        - static/:         Subfolder for web assets (uploads/results) (Options 1 and 2).
 echo        - templates/:       Subfolder for web UI files (see Option 5).
echo.
echo  ----------------------------------------------------------------
echo  [7] Project Root Folder  (.)
 echo      - The main top-level folder containing the entire project.
 echo      - Key Files/Folders:
 echo        - showcase_project.bat: This interactive batch script menu.
 echo        - README.md:            Project description, setup, and usage instructions.
 echo        - .gitignore:           Tells Git version control which files to ignore.
 echo        - .gitattributes:       Configures Git Large File Storage (LFS) for model files.
 echo        - colorization/:        Subfolder for the main application (see Option 6).
 echo        - model/:               Subfolder for model weight files (see Option 3).
 echo        - .venv/:               Subfolder for the Python virtual environment (dependencies).
echo.
echo  ----------------------------------------------------------------
echo  [8] Back to Main Menu
echo.
echo ================================================================
set /p dir_choice="Enter your choice (1-8): "

if "%dir_choice%"=="1" (
    echo Opening Input Directory...
    start explorer "%~dp0colorization\static\uploads"
    timeout /t 1 > nul
    goto directory_menu
)
if "%dir_choice%"=="2" (
    echo Opening Output Directory...
    start explorer "%~dp0colorization\static\results"
    timeout /t 1 > nul
    goto directory_menu
)
if "%dir_choice%"=="3" (
    echo Opening Model Weights Directory...
    start explorer "%~dp0model"
    timeout /t 1 > nul
    goto directory_menu
)
if "%dir_choice%"=="4" (
    echo Opening Colorizers Script Directory...
    start explorer "%~dp0colorization\colorizers"
    timeout /t 1 > nul
    goto directory_menu
)
if "%dir_choice%"=="5" (
    echo Opening Web Templates Directory...
    start explorer "%~dp0colorization\templates"
    timeout /t 1 > nul
    goto directory_menu
)
if "%dir_choice%"=="6" (
    echo Opening Main App Folder...
    start explorer "%~dp0colorization"
    timeout /t 1 > nul
    goto directory_menu
)
if "%dir_choice%"=="7" (
    echo Opening Project Root Folder...
    start explorer "%~dp0."
    timeout /t 1 > nul
    goto directory_menu
)
if "%dir_choice%"=="8" goto menu_loop
echo Invalid choice, please try again.
timeout /t 2 > nul
goto directory_menu

:model_status
cls
color 0D
REM Bright Purple on Black
echo ================================================================
echo                   MODEL and ENVIRONMENT VERIFICATION              
echo ================================================================
echo.
echo  Attempting to load models and check environment...
echo  - Initializing ECCV16 model architecture...
echo  - Initializing SIGGRAPH17 model architecture...
echo  - Checking for required weight files (.pth)...
echo  - Testing Python environment and PyTorch...
echo  - Detecting CUDA availability (for GPU acceleration)...
echo.
echo  Activating virtual environment (.venv)...
call .venv\Scripts\activate.bat
echo Checking and installing required Python packages (if any)...
pip install -r colorization\requirements.txt
echo Dependency check complete.
echo  Running verification script (colorization\test_colorizers.py)...
python colorization\test_colorizers.py
echo.
echo ================================================================
echo  Verification complete. Check output above for details/errors.
pause
goto menu_loop

:demo_menu
cls
color 0C
REM Bright Red on Black
echo ================================================================
echo                        COLORIZATION DEMO                         
echo ================================================================
echo.
echo  [1] Run Demo Script with Sample Image
echo      - Uses colorization\demo_release.py
echo      - Processes: colorization\static\uploads\ansel_adams3.jpg
echo      - Saves results to: colorization\static\results\demo_result_*.png
echo.
echo  [2] View Latest Demo Results Folder
echo      - Opens: colorization\static\results
echo.
echo  [3] Back to Main Menu
echo.
echo ================================================================
set /p demo_choice="Enter your choice (1-3): "

if "%demo_choice%"=="1" (
    cls
    echo ================================================================
    echo                      RUNNING DEMO SCRIPT                       
    echo ================================================================
    echo Activating virtual environment...
    call .venv\Scripts\activate.bat
    echo Checking and installing required Python packages (if any)...
    pip install -r colorization\requirements.txt
    echo Dependency check complete.
    echo Processing sample image: colorization\static\uploads\ansel_adams3.jpg ...
    python colorization\demo_release.py -i colorization\static\uploads\ansel_adams3.jpg --save_prefix demo_result -o colorization\static\results
    echo.
    echo ================================================================
    echo Demo completed! Results saved in colorization\static\results folder.
    echo Files: demo_result_eccv16.png, demo_result_siggraph17.png
    echo ================================================================
    pause
    echo Returning to Demo Menu in 2 seconds...
    timeout /t 2 > nul
    goto demo_menu
)
if "%demo_choice%"=="2" (
    echo Opening Results Directory...
    start explorer "%~dp0colorization\static\results"
    echo Returning to Demo Menu in 3 seconds...
    timeout /t 3 > nul
    goto demo_menu
)
if "%demo_choice%"=="3" goto menu_loop
echo Invalid choice, please try again.
timeout /t 2 > nul
goto demo_menu

:technical_details
cls
color 03
REM Cyan on Black
echo ================================================================
echo                   TECHNICAL STACK & ARCHITECTURE                 
echo ================================================================
echo.
echo  Key Technologies Used:
echo  ----------------------
echo  - Deep Learning Framework: PyTorch (for model building and execution)
echo  - Web Backend:           Flask (Python microframework for the web server)
echo  - Image Handling:        OpenCV, NumPy, scikit-image (for loading, processing)
echo  - User Interface:        HTML, CSS (likely TailwindCSS), JavaScript
echo.
echo  Core Model Architecture:
echo  ------------------------
echo  - Input:  L channel (Grayscale intensity, 1 channel) from CIEL*a*b* space
echo  - Output: a* and b* channels (Color information, 2 channels)
echo  - Color Space Transformation: Input images converted to CIEL*a*b*.
echo.
echo  Colorization Workflow:
echo  ----------------------
echo  1. Load input image.
echo  2. Convert image from RGB/Grayscale to CIEL*a*b* color space.
echo  3. Extract the L* channel (lightness).
echo  4. Resize L* channel for model input if necessary.
echo  5. Feed the L* channel tensor into the pre-trained neural network (ECCV16/SIGGRAPH17).
echo  6. The network predicts the corresponding a* and b* color channels.
echo  7. Combine the original L* channel with the predicted a* and b* channels.
echo  8. Convert the resulting L*a*b* image back to RGB for display/saving.
echo.
echo ================================================================
pause
goto menu_loop

:research_papers
cls
color 06
REM Brown/Yellow on Black
echo ================================================================
echo                   UNDERLYING RESEARCH PAPERS                     
echo ================================================================
echo.
echo  The models used in this project are based on the following publications:
echo.
echo  1. ECCV 2016 Model:
echo     - Title: "Colorful Image Colorization"
echo     - Authors: Richard Zhang, Phillip Isola, Alexei A. Efros
echo     - Venue: European Conference on Computer Vision (ECCV), 2016
echo     - Key Idea: Framed colorization as a classification task, predicting
echo       the probability distribution of colors for each pixel. Robust but
echo       can sometimes produce desaturated results due to averaging probabilities.
echo     - Link: https://arxiv.org/abs/1603.08511
echo.
echo  2. SIGGRAPH 2017 Model:
echo     - Title: "Real-Time User-Guided Image Colorization with Learned Deep Priors"
echo     - Authors: Richard Zhang, Jun-Yan Zhu, Phillip Isola, Xinyang Geng,
echo                Angela S. Lin, Tianhe Yu, Alexei A. Efros
echo     - Venue: ACM Transactions on Graphics (SIGGRAPH), 2017
echo     - Key Idea: Built upon the ECCV16 work, often using a regression loss
echo       (predicting direct color values) and architecture tweaks to produce
echo       more vibrant and diverse colors. Also explored user guidance.
echo     - Link: https://arxiv.org/abs/1705.02999
echo.
echo ================================================================
pause
goto menu_loop

:end
cls
color 07
REM White on Black
echo.
echo   ================================================================
echo           Thank you for exploring the Colorization Project!        
echo   ================================================================
echo.
echo                         Exiting showcase...
echo.
timeout /t 3 > nul
exit 